{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common.ts","./src/app/data.service.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/month-table/month-table.component.ts","./src/app/month-table/month-table.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'spa';\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h1>NC County Map of Reported COVID-19 Cases</h1>\n    </div>\n  </div>\n  <app-map></app-map>\n  <app-month-table></app-month-table>\n</div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { MapComponent } from './map/map.component';\nimport { MonthTableComponent } from './month-table/month-table.component';\n\n@NgModule({\n  declarations: [\t\t\n    AppComponent,\n      MapComponent,\n      MonthTableComponent\n   ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export function toTitleCase(title: string) {\n  var words = title.split(' ');\n  var output = words.map((word) => {\n    return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n  })\n  return output.join(' ');\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  public countyDataChanged = new Subject<{}>();\n\n  private monthlyData = <{}>[];\n  private countiesRequest: Observable<any>;\n  private counties: string = '/assets/data/nc-counties.geojson';\n  private countyGeoJson;\n  public currentMonth;\n\n  constructor(private http: HttpClient) {\n    this.countiesRequest = this.http.get(this.counties);\n    this.countiesRequest.subscribe((res: any) => {\n      this.countyGeoJson = res;\n      console.log('County GeoJSON loaded.');\n      //this.countyDataChanged.next(this.countyGeoJson)\n    });\n  }\n\n  getMothlyData(caseMonth) {\n    if (this.monthlyData[caseMonth]) {\n      console.log('Cached');\n      this.addMonthDataToCounties(caseMonth);\n    } else {\n      console.log('Getting data for ' + caseMonth);\n      this.http.get('/api/month/' + caseMonth + '/', {'responseType': 'json'})\n        .subscribe((res: any) => {\n          this.currentMonth = caseMonth;\n          this.monthlyData[caseMonth] = res;\n          this.addMonthDataToCounties(caseMonth);\n        });\n    }\n  }\n\n  addMonthDataToCounties(caseMonth) {\n    console.log('Attaching data for ' + caseMonth);\n    this.countiesRequest.toPromise().finally(() => {\n      for (let feature of this.countyGeoJson.features) {\n        feature.properties.totalCases = 0;\n        feature.properties.stats = {};\n\n        let countyName = feature.properties.CO_NAME;\n        let countyMonthData = this.monthlyData[caseMonth][countyName];\n        if (countyMonthData) {\n          feature.properties.totalCases = countyMonthData.totalCases;\n          feature.properties.stats = countyMonthData.stats;\n        }\n      }\n      console.log('Attached data for ' + caseMonth);\n      this.countyDataChanged.next(this.countyGeoJson)\n    });\n  }\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\nimport { DataService } from '../data.service';\nimport { formatDate } from '@angular/common';\nimport { toTitleCase } from '../common';\nimport { NgForm, NgModel } from '@angular/forms';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit, AfterViewInit {\n  @ViewChild('mapControls') mapControls: NgForm;\n  // @ViewChild('caseMonth') monthContol: NgModel;\n  private map: L.Map;\n  private geoJson: L.GeoJSON;\n  private info: L.Control;\n  private legend: L.Control;\n  private mapboxToken = \"pk.eyJ1Ijoicm1hdHRoZXdzIiwiYSI6ImNrbzh3OTBpazFram0ydW9uODZoeDIxZzgifQ.MhR7riaPgzQ-7yqdmVBvuA\";\n  public caseMonth = '2021-04';\n  public monthOptions = [];\n  private grades = [0, 100, 200, 500, 1000, 2000, 5000, 10000];\n  private infoDiv;\n  \n  constructor(private http: HttpClient, private dataService: DataService) {\n    // this.caseMonth = formatDate(Date(),'yyyy-MM', 'en-US');\n    // console.log('Current Month:', this.caseMonth);\n    this.buildMonthOptions();\n  }\n\n  ngOnInit() {\n    this.dataService.getMothlyData(this.caseMonth);\n  }\n\n  ngAfterViewInit() {\n    // this.caseMonth = this.monthOptions[1].caseMonth\n    this.initMap();\n    this.dataService.countyDataChanged.subscribe((res: any) => {\n      this.updateGeoJson(res);\n      this.updateInfo(null);\n    });\n  }\n\n  buildMonthOptions() {\n    var caseMonth;\n    for (let i = 0; caseMonth !== this.caseMonth; i++) {\n      var year = 2020 + Math.floor(i / 12);\n      var month = i % 12 + 1;\n      caseMonth = year + '-' + month.toLocaleString('en-US', {minimumIntegerDigits: 2});\n      var description = formatDate(caseMonth + '-1','MMMM yyyy', 'en-US');\n      this.monthOptions.unshift({ caseMonth: caseMonth, description: description });\n    }\n    console.log(this.monthOptions);\n  }\n\n  initMap() {\n    this.map = L.map('map', {\n      center: [35.1, -79.9],\n      zoom: 7\n    });\n\n    L.tileLayer ('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' + this.mapboxToken, {\n      maxZoom: 18,\n      attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, ' +\n          'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n      id: 'mapbox/light-v9',\n      tileSize: 512,\n      zoomOffset: -1\n    }).addTo(this.map);\n\n    this.addInfo();\n    this.addLegend();\n  }\n\n  addInfo() {\n    this.info = new L.Control();\n\n    this.info.onAdd = (map) => {\n      this.infoDiv = L.DomUtil.create('div', 'info');\n      this.updateInfo(null);\n      return this.infoDiv;\n    };\n\n    this.info.addTo(this.map);\n  }\n\n  updateInfo(props) {\n    let numberFormatter = new Intl.NumberFormat('en-US');\n    let infoMonth = formatDate(this.caseMonth + '-1','MMMM yyyy', 'en-US');\n    this.infoDiv.innerHTML = '<h4>Reported COVID-19 Cases</h4>';\n    this.infoDiv.innerHTML += '<h4>' + infoMonth + '</h4>';\n    if (props) {\n      let value = props.totalCases;            \n      this.infoDiv.innerHTML +=\n        '<b>' + toTitleCase(props.CO_NAME) + ' County</b><br />' + numberFormatter.format(value) + ' cases';\n    } else {\n      this.infoDiv.innerHTML += 'Hover over a county';\n    }\n  }\n\n  getColor(d) {\n    return d > this.grades[7] ? '#800026' :\n           d > this.grades[6] ? '#BD0026' :\n           d > this.grades[5] ? '#E31A1C' :\n           d > this.grades[4] ? '#FC4E2A' :\n           d > this.grades[3] ? '#FD8D3C' :\n           d > this.grades[2] ? '#FEB24C' :\n           d > this.grades[1] ? '#FED976' :\n                                '#FFEDA0';\n  }\n\n  style(feature) {\n    let value = feature.properties.totalCases;\n\n    return {\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '3',\n      fillOpacity: 0.7,\n      fillColor: this.getColor(value)\n    };\n  }\n\n  highlightFeature(e) {\n    var layer = e.target;\n\n    layer.setStyle({\n      weight: 5,\n      color: '#666',\n      dashArray: '',\n      fillOpacity: 0.7\n    });\n\n    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n      layer.bringToFront();\n    }\n\n    this.updateInfo(layer.feature.properties);\n  }\n\n  resetHighlight(e) {\n    this.geoJson.resetStyle(e.target);\n    this.updateInfo(null);\n  }\n\n  zoomToFeature(e) {\n    this.map.fitBounds(e.target.getBounds());\n  }\n\n  onEachFeature(feature, layer) {\n    layer.on({\n      mouseover: this.highlightFeature.bind(this),\n      mouseout: this.resetHighlight.bind(this),\n      click: this.zoomToFeature.bind(this)\n    });\n  }\n\n  updateGeoJson(geoJson) {\n    if(this.geoJson) {\n      this.geoJson.remove();\n    }\n\n    this.geoJson = L.geoJSON(geoJson, {\n      style: this.style.bind(this),\n      onEachFeature: this.onEachFeature.bind(this)\n    }).addTo(this.map);\n\n    console.log('Update GeoJSON');\n    //map.attributionControl.addAttribution('Covid case data provided by <a href=\"http://data.cdc.gov/\">US Centers for Disease Control and Prevention</a>');\n  }\n\n  addLegend(): void {\n    this.legend = new L.Control({position: 'bottomright'});\n\n    this.legend.onAdd = () => {\n      var div = L.DomUtil.create('div', 'info legend'),\n        grades = this.grades,\n        labels = [],\n        from, to;\n      console.log(div);\n\n      for (var i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"background:' + this.getColor(from + 1) + '\"></i> ' +\n          from + (to ? '&ndash;' + to : '+'));\n      }\n\n      div.innerHTML = labels.join('<br>');\n      return div;\n    };\n\n    this.legend.addTo(this.map);\n  }\n\n  onChangeMonth(e) {\n    this.caseMonth = e.value;\n    this.dataService.getMothlyData(this.caseMonth);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12\">\n    <form class=\"form-inline text-right\">\n      <div class=\"form-group\">\n        <label for=\"caseMonth\">Case Month</label>&nbsp;\n        <select\n          name=\"caseMonth\"\n          id=\"caseMonth\"\n          class=\"form-control\"\n          (change)=\"onChangeMonth(s)\"\n          #s>\n          <option [value]=\"option.caseMonth\" *ngFor=\"let option of monthOptions\">\n            {{ option.description }}</option>\n        </select>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <div class=\"map-frame\">\n      <div id=\"map\"></div>\n    </div>\n  </div>\n</div>\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DataService } from '../data.service';\nimport { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-month-table',\n  templateUrl: './month-table.component.html',\n  styleUrls: ['./month-table.component.css'],\n})\nexport class MonthTableComponent implements OnInit, AfterViewInit {\n  public data = [];\n  public dataChanged: Subject<any> = new Subject();\n  public headerDate;\n\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {\n    this.dataService.countyDataChanged.subscribe((res: JSON) => {\n      this.headerDate = formatDate(this.dataService.currentMonth + '-1','MMMM yyyy', 'en-US');\n      this.data = res['features'];\n      this.data.sort((a, b) => {\n        return (a.properties.CO_NAME < b.properties.CO_NAME) ? -1 : 1; })\n    });\n  }\n  \n  ngAfterViewInit() {\n  }\n}\n","<div class=\"row\" *ngIf=\"data.length\">\n  <div class=\"col-md-12\">\n    <h2>{{ headerDate }} Reported COVID-19 Cases</h2>\n    <table class=\"table table-striped table-hover\" >\n      <thead>\n        <tr>\n          <th scope=\"col\">County</th>\n          <th scope=\"col\">Total Cases</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let county of data\">\n          <td>{{ county.properties.CO_NAME | titlecase }}</td>\n          <td>{{ county.properties.totalCases }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}